environment:

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

    - PYTHON: "C:\\Python35-x64"
      MINICONDA: C:\Miniconda3
    - PYTHON: "C:\\Python36-x64"
      MINICONDA: C:\Miniconda3

install:
  # We need wheel installed to build wheels
  - appveyor DownloadFile https://miktex.org/download/ctan/systems/win32/miktex/setup/windows-x86/miktex-portable-2.9.6753.exe
  - nuget install 7ZipCLI -ExcludeVersion
  - set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PYTHON%\Scripts;c:\miktex\texmfs\install\miktex\bin;%appveyor_build_folder%\7ZipCLI\tools;%PATH%
  - if not exist c:\miktex\texmfs\install\miktex\bin\pdflatex.exe appveyor DownloadFile https://miktex.org/download/ctan/systems/win32/miktex/setup/windows-x86/miktex-portable-2.9.6753.exe
  - if not exist c:\miktex\texmfs\install\miktex\bin\pdflatex.exe 7z x miktex-portable-2.9.6753.exe -oC:\miktex >NUL
  - initexmf --set-config-value "[MPM]AutoInstall=1"
  - conda.exe config --set always_yes yes
  - conda update -q conda
  - conda info -a
  - conda create -q -n test-environment -c conda-forge python=%PYTHON_VERSION% qutip
  - activate test-environment
  - echo CONDA_PREFIX %CONDA_PREFIX%
  - echo PATH %PATH%
  - cmd: "%CONDA_PREFIX%\\python.exe -m pip install -e .[visualization,dev]"

build: off

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  - set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PYTHON%\Scripts;c:\miktex\texmfs\install\miktex\bin;%PATH%
  - activate test-environment
  - echo CONDA_PREFIX %CONDA_PREFIX%
  - echo PATH %PATH%
  - set doclist=
  - for /f "tokens=*" %%F in ('dir /b /s docs\*.rst') do call set doclist=%%doclist%% "%%~F"
  - cmd: "%CONDA_PREFIX%\\python.exe -m pytest --doctest-modules --cov=qnet src tests %doclist%"

#after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  #- "build.cmd %PYTHON%\\python.exe setup.py bdist_wheel"

#artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  #- path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
